name: Build Module

on:
  push:
    branches: [ crond_start_alipay ]
    paths-ignore:
      - '**.md'
      - '.github/**'
  pull_request:
    branches: [ crond_start_alipay ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get module info
        id: module_info
        run: |
          MODULE_ID=$(grep -oP 'id=\K.*' Source/module.prop)
          MODULE_NAME=$(grep -oP 'name=\K.*' Source/module.prop)
          MODULE_VERSION=$(grep -oP 'version=\K.*' Source/module.prop)
          MODULE_VERSIONCODE=$(grep -oP 'versionCode=\K.*' Source/module.prop)
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          REPO_NAME=${{ github.repository }}
          
          echo "module_id=$MODULE_ID" >> $GITHUB_OUTPUT
          echo "module_name=$MODULE_NAME" >> $GITHUB_OUTPUT
          echo "module_version=$MODULE_VERSION" >> $GITHUB_OUTPUT
          echo "module_versioncode=$MODULE_VERSIONCODE" >> $GITHUB_OUTPUT
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "repo_name=$REPO_NAME" >> $GITHUB_OUTPUT
          
          # Ëé∑ÂèñchangelogÂÜÖÂÆπÂπ∂Â§ÑÁêÜÊ†ºÂºè
          CHANGELOG_CONTENT=$(cat changelog | sed 's/^/            /')
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG_CONTENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update updateJson in module.prop
        run: |
          REPO_NAME=${{ steps.module_info.outputs.repo_name }}
          BRANCH_NAME=${{ steps.module_info.outputs.branch_name }}
          sed -i "s|updateJson=.*|updateJson=https://gitee.com/lucky__cat/magisk-modules/raw/crond_start_alipay/update.json|g" Source/module.prop

      - name: Create Release Package
        id: build
        run: |
          # ÂàõÂª∫ÊûÑÂª∫ÁõÆÂΩï
          mkdir -p release
          mkdir -p temp_build
          
          # Â§çÂà∂Êñá‰ª∂Âà∞‰∏¥Êó∂ÊûÑÂª∫ÁõÆÂΩï
          cp -r Source/* temp_build/
          cp update.json temp_build/
          cp changelog temp_build/
          
          # ÊòæÁ§∫ÊûÑÂª∫ÁõÆÂΩïÂÜÖÂÆπ
          echo "Build directory content:"
          ls -la temp_build/
          
          # ÂàõÂª∫zipÂåÖ
          ZIP_NAME="${{ steps.module_info.outputs.module_id }}-${{ steps.module_info.outputs.module_version }}.zip"
          cd temp_build
          zip -r "../release/$ZIP_NAME" ./*
          cd ..
          echo "zip_name=$ZIP_NAME" >> $GITHUB_OUTPUT
          
          # ÊòæÁ§∫releaseÁõÆÂΩïÂÜÖÂÆπ
          echo "Release directory content:"
          ls -la release/

      - name: Create Release
        if: github.event_name != 'pull_request'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.module_info.outputs.module_version }}
          name: Âæ™ÁéØÂêØÂä®ÊîØ‰ªòÂÆù v${{ steps.module_info.outputs.module_version }} 
          body: |
            ### ÊúÄÊñ∞ÂèëË°åÁâà
            
            v${{ steps.module_info.outputs.module_version }}
            
            ### Êõ¥Êñ∞ÂÜÖÂÆπ
            ${{ steps.module_info.outputs.changelog }}
            
            ### ËµÑÊ∫ê
            - üì¶ Ê®°ÂùóÂÆâË£ÖÂåÖ
            - üìÑ Êõ¥Êñ∞Êó•Âøó
            - üîÑ Ëá™Âä®Êõ¥Êñ∞ÊîØÊåÅ
          files: release/${{ steps.build.outputs.zip_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update update.json
        if: github.event_name != 'pull_request'
        run: |
          MODULE_VERSION=${{ steps.module_info.outputs.module_version }}
          MODULE_VERSIONCODE=${{ steps.module_info.outputs.module_versioncode }}
          ZIP_NAME=${{ steps.build.outputs.zip_name }}
          
          # ÁîüÊàê changelog Â≠óÊÆµ‰∏∫ changelog Êñá‰ª∂ÁöÑ raw ÈìæÊé•
          CHANGELOG_URL="https://gitee.com/lucky__cat/magisk-modules/raw/crond_start_alipay/changelog"
          
          # ÂàõÂª∫ÊàñÊõ¥Êñ∞ update.json
          echo '{' > update.json
          echo '  "version": "'${MODULE_VERSION}'",' >> update.json
          echo '  "versionCode": '${MODULE_VERSIONCODE}',' >> update.json
          echo '  "zipUrl": "https://gitee.com/lucky__cat/magisk-modules/releases/download/v'${MODULE_VERSION}'/'${ZIP_NAME}'",' >> update.json
          echo '  "changelog": "'${CHANGELOG_URL}'"' >> update.json
          echo '}' >> update.json
          
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add update.json Source/module.prop
          git commit -m "Update module to v${MODULE_VERSION} (${MODULE_VERSIONCODE})"
          git push origin ${GITHUB_REF#refs/heads/} 