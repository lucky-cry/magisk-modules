name: Build Module

on:
  push:
    branches: [ crond_start_alipay ]
    paths-ignore:
      - '**.md'
      - '.github/**'
  pull_request:
    branches: [ crond_start_alipay ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Environment
        run: |
          echo "Checking Source directory content:"
          ls -la Source/
          echo "Content of module.prop:"
          cat Source/module.prop
          VERSION=$(grep "version=" Source/module.prop | cut -d= -f2 | tr -d '\r')
          echo "Extracted version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          # 将changelog内容转换为JSON格式的字符串
          CHANGELOG=$(cat changelog | jq -Rs .)
          echo "CHANGELOG=$CHANGELOG" >> $GITHUB_ENV

      - name: Create Release Package
        run: |
          # 创建构建目录
          mkdir -p release
          mkdir -p temp_build
          
          # 复制文件到临时构建目录
          cp -r Source/* temp_build/
          cp update.json temp_build/
          cp changelog temp_build/
          
          # 显示构建目录内容
          echo "Build directory content:"
          ls -la temp_build/
          
          # 创建zip包
          cd temp_build
          zip -r "../release/module-v${{ env.VERSION }}.zip" ./*
          cd ..
          
          # 显示release目录内容
          echo "Release directory content:"
          ls -la release/

      - name: Create Release
        if: github.event_name != 'pull_request'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          name: 循环启动支付宝 v${{ env.VERSION }}
          body: ${{ fromJson(env.CHANGELOG) }}
          files: release/module-v${{ env.VERSION }}.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 